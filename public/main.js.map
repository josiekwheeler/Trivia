{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/quiz/quiz.component.css","webpack:///./src/app/quiz/quiz.component.html","webpack:///./src/app/quiz/quiz.component.ts","webpack:///./src/app/results/results.component.css","webpack:///./src/app/results/results.component.html","webpack:///./src/app/results/results.component.ts","webpack:///./src/app/scores/scores.component.css","webpack:///./src/app/scores/scores.component.html","webpack:///./src/app/scores/scores.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n    getQuestions() {\n      return this.http.get(\"/api/questions\", {responseType: \"json\"});\n    }\n\n    getScores() {\n      return this.http.get(\"/api/scores\", {responseType: \"json\"});\n    }\n\n    addScores(newScore) {\n      return this.http.get(\"/api.scores\", {responseType: \"json\"});\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Animal Trivia</h1>\\n\\n<nav>\\n  <a routerLink=\\\"/quiz\\\" routerLinkActive=\\\"active\\\">quiz</a>\\n  <a routerLink=\\\"/scores\\\" routerLinkActive=\\\"active\\\">scores</a>\\n</nav>\\n\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { ApiService } from './api.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TriviaProject';\n\n  questions: any;\n  scores: any;\n\n  constructor(private apiService: ApiService) {\n    this.apiService.getQuestions().subscribe(response => {\n      this.questions = response;\n      console.log(this.questions);\n    });\n    this.apiService.getScores().subscribe(response => {\n      this.scores = response;\n      console.log(this.scores);\n    });\n\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { ApiService } from \"./api.service\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes, Router } from \"@angular/router\";\nimport { QuizComponent } from './quiz/quiz.component';\nimport { ResultsComponent } from './results/results.component';\nimport { ScoresComponent } from './scores/scores.component';\n\n\nconst appRoutes: Routes = [\n  { path:\"\", redirectTo: \"/quiz\", pathMatch: \"full\"},\n  { path: \"quiz\", component: QuizComponent },\n  { path: \"results\", component: ResultsComponent },\n  { path: \"scores\", component: ScoresComponent }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuizComponent,\n    ResultsComponent,\n    ScoresComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1aXovcXVpei5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form #questionForm=\\\"ngForm\\\">\\n    <label for=\\\"\\\">Enter Username:</label>\\n    <input type=\\\"text\\\" name=\\\"username\\\">\\n\\n<div *ngFor=\\\"let question of questions; index as i\\\">\\n\\n      <p>{{ question.question_name }}</p>\\n\\n      <input type=\\\"radio\\\" ngModel name=\\\"q{{i+1}}\\\" value=\\\"{{ question.choice_1 }}\\\">\\n      <label for=\\\"\\\">{{ question.choice_1 }}</label>\\n\\n      <input type=\\\"radio\\\" ngModel name=\\\"q{{i+1}}\\\" value=\\\"{{ question.choice_2 }}\\\">\\n      <label for=\\\"\\\">{{ question.choice_2 }}</label>\\n      \\n      <input type=\\\"radio\\\" ngModel name=\\\"q{{i+1}}\\\" value=\\\"{{ question.choice_3 }}\\\">\\n      <label for=\\\"\\\">{{ question.choice_3 }}</label>\\n\\n      <input type=\\\"radio\\\" ngModel name=\\\"q{{i+1}}\\\" value=\\\"{{ question.choice_4 }}\\\">\\n      <label for=\\\"\\\">{{ question.choice_4 }}</label>\\n</div>\\n    <button>Submit</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css']\n})\nexport class QuizComponent implements OnInit {\n\n  questions: any;\n\n  constructor(private apiService: ApiService) { \n    this.apiService.getQuestions().subscribe(response => {\n      this.questions = response;\n      console.log(this.questions);\n    });}\n\n  ngOnInit() {\n    this.questions = this.apiService.getQuestions();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3VsdHMvcmVzdWx0cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav>\\n    <a routerLink=\\\"/scores\\\" routerLinkActive=\\\"active\\\">scores</a>\\n  </nav>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Njb3Jlcy9zY29yZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>hello</p>\\n<div *ngFor=\\\"let score of scores; index as i\\\">\\n<p>{{ score.username }}</p>\\n<p>{{ score.scores }}</p>\\n</div>\\n\\n<div *ngFor=\\\"let question of questions; index as i\\\">\\n    <p>{{ question.answer }}</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'scores',\n  templateUrl: './scores.component.html',\n  styleUrls: ['./scores.component.css']\n})\nexport class ScoresComponent implements OnInit {\n\n  scores: any;\n\n  constructor(private apiService: ApiService) { \n    this.apiService.getScores().subscribe(response => {\n      this.scores = response;\n    })\n  }\n\n  ngOnInit() {\n    this.scores = this.apiService.getScores();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}